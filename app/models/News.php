<?php

namespace app\models;

use app\models\behaviors\TranslateBehavior;
use Yii;
use yii\behaviors\TimestampBehavior;

/**
 * This is the model class for table "news".
 *
 * @property int    $id
 * @property string $title
 * @property string $seo_title
 * @property string $seo_description
 * @property string $seo_keywords
 * @property string $short
 * @property string $text
 * @property int    $status
 * @property int    $created_at
 * @property int    $updated_at
 * @property int    $published_at
 */
class News extends \yii\db\ActiveRecord
{

    const STATUS_INACTIVE = 0;
    const STATUS_ACTIVE   = 1;

    /**
     * {@inheritdoc}
     */
    public static function tableName() {
        return 'news';
    }

    /**
     * {@inheritdoc}
     */
    public function rules() {
        return [
            [['title', 'short', 'text'], 'required'],
            [['text'], 'string'],
            [['status'], 'default', 'value' => self::STATUS_ACTIVE],
            [['status'], 'in', 'range' => [self::STATUS_ACTIVE, self::STATUS_INACTIVE]],
            [['published_at'], 'safe'],
            [['status', 'created_at', 'updated_at'], 'integer'],
            [['title', 'seo_title', 'seo_description', 'seo_keywords', 'short'], 'string', 'max' => 2048],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels() {
        return [
            'id'              => Yii::t('site', 'ID'),
            'title'           => Yii::t('site', 'Title'),
            'seo_title'       => Yii::t('site', 'Seo title'),
            'seo_description' => Yii::t('site', 'Seo description'),
            'seo_keywords'    => Yii::t('site', 'Seo keywords'),
            'short'           => Yii::t('site', 'Short text'),
            'text'            => Yii::t('site', 'Text'),
            'status'          => Yii::t('site', 'Status'),
            'created_at'      => Yii::t('site', 'Created'),
            'updated_at'      => Yii::t('site', 'Updated'),
            'published_at'    => Yii::t('site', 'Published'),
        ];
    }

    public function behaviors() {
        return [
            TimestampBehavior::class,
            [
                'class'      => TranslateBehavior::class,
                'attributes' => ['title', 'seo_title', 'seo_description', 'seo_keywords', 'short', 'text'],
            ],

        ];
    }

    public function beforeValidate() {
        if(get_called_class() == News::class){
            var_dump($this->published_at);
            if(preg_match('|^\d+-\d+-\d+ \d+:\d+|is', $this->published_at)){
                $this->published_at = strtotime($this->published_at);
            }else if(empty($this->published_at)){
                $this->published_at = time();
            }
        }
        return parent::beforeValidate();
    }

    public function afterFind() {
        if(!preg_match('|\d+-\d+-\d+ \d+:\d+|is', $this->published_at)){
            $this->published_at = Yii::$app->formatter->asDatetime($this->published_at);
        }
        parent::afterFind(); // TODO: Change the autogenerated stub
    }

    public function getStatusesList() {
        return [
            self::STATUS_INACTIVE => Yii::t('site', 'Inactive'),
            self::STATUS_ACTIVE   => Yii::t('site', 'Active'),
        ];
    }

}
